def cs_palette():
    """Cityscapes palette that maps each class to RGB values."""
    return [#               train_id
            [128, 64,128], #  0 
            [244, 35,232], #  1
            [ 70, 70, 70], #  2
            [102,102,156], #  3
            [190,153,153], #  4
            [153,153,153], #  5
            [250,170, 30], #  6
            [220,220,  0], #  7
            [107,142, 35], #  8
            [152,251,152], #  9
            [ 70,130,180], # 10
            [220, 20, 60], # 11
            [255,  0,  0], # 12
            [  0,  0,142], # 13
            [  0,  0, 70], # 14
            [  0, 60,100], # 15
            [  0, 80,100], # 16
            [  0,  0,230], # 17
            [119, 11, 32]  # 18
           ]

def tmhmi_palette():
    """TMHMI semantic dataset palette that maps each class to RGB values."""
    return [#               train_id
            [128, 64,128], #  0 
            [244, 35,232], #  1
            [ 70, 70, 70], #  2
            [102,102,156], #  3
            [190,153,153], #  4
            [153,153,153], #  5
            [250,170, 30], #  6
            [220,220,  0], #  7
            [107,142, 35], #  8
            [152,251,152], #  9
            [ 70,130,180], # 10
            [220, 20, 60], # 11
            [255,  0,  0], # 12
            [  0,  0,142], # 13
            [  0,  0, 70], # 14
            [  0, 60,100], # 15
            [  0, 80,100], # 16
            [  0,  0,230], # 17
            [119, 11, 32], # 18
            [248,248, 28], # 19
            [220,220,220], # 20
            [250,170,160], # 21
            [111, 74,  0], # 22
           ]

def getPaletteFunction(dataset):
    assert dataset in ["Cityscapes", "TMHMI"]

    if dataset == "Cityscapes":
        return cs_palette
    elif dataset == "TMHMI":
        return tmhmi_palette
